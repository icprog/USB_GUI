<Window x:Class="USB_GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:USB_GUI"
        Loaded="Window_Loaded"
        xmlns:d3="http://research.microsoft.com/DynamicDataDisplay/1.0"
        mc:Ignorable="d"
        xmlns:ui="clr-namespace:USB_GUI"
        Background="#FFE6E4E3"
        Title="USB采集器UI" Height="768" Width="1366"  Icon="usbLogo.ico">
    <Window.Resources>
        <Style TargetType="{x:Type Border}" x:Key="ElemBorder">
            <Setter Property="Width" Value="950"/>
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="Black" />
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="TGButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="35" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Viewbox Width="100" Stretch="Uniform">
                            <Grid>
                                <Image  Source="Resources/Button/switchOff.png" Name="offState"/>
                                <Image Source="Resources/Button/switchOn.png" Name="onState"/>
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="offState" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="onState" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" TargetName="offState" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="onState" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="20" />
        </Style>
        <Style x:Key="BtStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="150" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Height" Value="50" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Viewbox Width="100" Height="40">
                            <Grid>
                                
                                <Image Source="Resources/Button/buttonIsPressed.png"  x:Name="btnIsPressed"/>
                                
                                <Image Source="Resources/Button/buttonNoPressed.png"  x:Name="btnNoPressed"/>
                              
                            </Grid>
                        </Viewbox>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="btnNoPressed" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="false">
                                <Setter Property="Visibility" Value="Visible" TargetName="btnNoPressed" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Border BorderBrush="Black" BorderThickness="2" Width="1000" HorizontalAlignment="Left" Height="690">
            <Grid>
                <Border Style="{StaticResource ElemBorder}" BorderBrush="Black" BorderThickness="2"  Height="65" Margin="0,45,0,0" >
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />

                        </Grid.ColumnDefinitions>
                        <Ellipse Fill="Red" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="45"  Stroke="Black" Width="45"/>
                        <Ellipse Fill="Red" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="45"  Stroke="Black" Width="45"/>
                        <Ellipse Fill="Red" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="45"  Stroke="Black" Width="45" />
                        <Ellipse Fill="Red" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="45"  Stroke="Black" Width="45" />
                        <Ellipse Fill="Red" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="45"  Stroke="Black" Width="45" />
                        <Ellipse Fill="Red" Grid.Column="5" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="45"  Stroke="Black" Width="45" />
                        <Ellipse Fill="Red" Grid.Column="6" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="45"  Stroke="Black" Width="45" />
                        <Ellipse Fill="Red" Grid.Column="7" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="45"  Stroke="Black" Width="45" />
                    </Grid>
                </Border>

                <Border Style="{StaticResource ElemBorder}" Margin="0,150,0,0" Height="50">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ToggleButton    Grid.Column="0" HorizontalAlignment="Center"  Style="{DynamicResource TGButton}"/>
                        <ToggleButton    Grid.Column="1" HorizontalAlignment="Center"  Style="{DynamicResource TGButton}" />
                        <ToggleButton    Grid.Column="2" HorizontalAlignment="Center"  Style="{DynamicResource TGButton}" />
                        <ToggleButton    Grid.Column="3" HorizontalAlignment="Center"  Style="{DynamicResource TGButton}" />
                        <ToggleButton    Grid.Column="4" HorizontalAlignment="Center"  Style="{DynamicResource TGButton}" />
                        <ToggleButton    Grid.Column="5" HorizontalAlignment="Center"  Style="{DynamicResource TGButton}" />
                        <ToggleButton    Grid.Column="6" HorizontalAlignment="Center"  Style="{DynamicResource TGButton}" />
                        <ToggleButton    Grid.Column="7" HorizontalAlignment="Center"  Style="{DynamicResource TGButton}" />
                    </Grid>
                </Border>

                <Border Style="{StaticResource ElemBorder}" Margin="0,220,0,0" Height="300">
                    <Grid>
                        <d3:ChartPlotter x:Name="plotter" Margin="0">
                            <d3:ChartPlotter.VerticalAxis>
                                <d3:VerticalIntegerAxis />
                            </d3:ChartPlotter.VerticalAxis>

                            <d3:ChartPlotter.HorizontalAxis>
                                <d3:HorizontalIntegerAxis />
                            </d3:ChartPlotter.HorizontalAxis>

                            <d3:Header Content="voltage oscillogram"/>
                            <d3:VerticalAxisTitle Content="vol"/>
                        </d3:ChartPlotter>
                    </Grid>
                </Border>

                <Border Style="{StaticResource ElemBorder}" Margin="0,520,0,0" Height="60">
                    <Grid>

                        <TextBlock Text="VOL: 3.23V" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    </Grid>
                </Border>
                <Border Style="{StaticResource ElemBorder}" Margin="0,590,0,0" Height="60" >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="我是模拟数据1" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <TextBlock Text="我是模拟数据2" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Grid>

                </Border>
            </Grid>
        </Border>
        <Border HorizontalAlignment="Right" VerticalAlignment="Center"  BorderBrush="Black" Margin="10" BorderThickness="2" Width="330" Height="690">
            <Grid>
                <!--<ui:SliderRotation  Height="100" HorizontalAlignment="Left" Margin="10,323.5,0,227.5" />-->
                <!--<ui:SliderRotation Height="100"  Margin="158,323.5,38,227.5" />-->
                <Viewbox Width="100"  HorizontalAlignment="Left" Margin="30,0,0,208" VerticalAlignment="Bottom">
                    <Image Source="Resources/Button/knob.png"    />
                </Viewbox>
                <Viewbox Width="100" Margin="0,0,21,208" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                    <Image Source="Resources/Button/knob.png" RenderTransformOrigin="0.97,0.393"    />
                </Viewbox>
                <Button Style="{DynamicResource BtStyle}" Margin="0,49,176,587" RenderTransformOrigin="0.72,2.6"  />
                <Button Style="{DynamicResource BtStyle}" Margin="0,294,176,342"  />
                <Button Style="{DynamicResource BtStyle}" Margin="0,149,176,487"  />
                <Button Style="{DynamicResource BtStyle}" Margin="0,524,176,112"  />
                <Button Style="{DynamicResource BtStyle}" Margin="0,594,176,42"  />
                <Label x:Name="label" HorizontalAlignment="Left" Margin="215,54,0,0" VerticalAlignment="Top"/>
                <Label x:Name="label1" Content="开关量输入" Margin="43,32,213,629" RenderTransformOrigin="0.457,0.8"/>
                <Label x:Name="label1_Copy" Content="开关量输出" Margin="43,132,213,529"/>
                <Label x:Name="label1_Copy1" Content="波形显示" Margin="43,279,213,382"/>
                <Label x:Name="label1_Copy2" Content="模拟信号" Margin="43,509,213,152" RenderTransformOrigin="0.652,5.48"/>
                <Label x:Name="label1_Copy3" Content="脉冲记数" Margin="43,579,213,82" RenderTransformOrigin="0.652,5.48"/>
            </Grid>
        </Border>

    </Grid>

</Window>
